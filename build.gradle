buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
      		url "https://plugins.gradle.org/m2/"
    	}
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    	classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.12.0")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'

jar {
	baseName = project.name
	version = '0.0.2-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-security")
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile ('mysql:mysql-connector-java:5.1.37')
	compile 'org.springframework.cloud:spring-cloud-spring-service-connector:1.2.3.RELEASE'
	compile 'org.springframework.cloud:spring-cloud-cloudfoundry-connector:1.2.3.RELEASE'
	compile("org.springframework.boot:spring-boot-devtools")
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

group = "alelodev"

docker {
	name "registry.ng.bluemix.net/alelodev/" + project.name
	dockerfile "docker/Dockerfile"
	files tasks.jar.archivePath
	buildArgs([app_jar: tasks.jar.archiveName, app_name: project.name])
}